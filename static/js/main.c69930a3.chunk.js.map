{"version":3,"sources":["index.js","components/RectFill/RectFill.js","App.js","custom_components/Snowflakes/Snowflakes.js","diagnostics/reportWebVitals.js","img/troy.jpg"],"names":["RectFill","props","wrapperRef","React","state","dimensions","eventListenerAttached","this","padding","ratio","inners","width","height","sideLength","Math","min","style","position","left","top","className","children","console","log","ref","window","addEventListener","setState","current","getBoundingClientRect","prevProps","prevState","snapshot","removeEventListener","gameToPercent","rightEyeStartOffset","topBound","botBound","distToPaddlePlane","distToDeathPlane","paddleWidth","puckRadius","aiPaddleSpeed","difficultyAISpeed","App","countdownVal","difficultySelected","keysDown","Set","tickInterval","paddle1Pos","paddle2Pos","xPuck","yPuck","xVelecityPuck","yVelecityPuck","scoreLeft","scoreRight","setTimeout","val","undefined","length","e","pressAnyToContinue","key","old","selectDifficulty","playAgain","add","delete","id","onKeyPress","keyPressHandler","onKeyDown","keyDownHandler","onKeyUp","keyUpHandler","onClick","clickHandler","tabIndex","makeBorders","resetGameVars","setInterval","tick","clearInterval","abs","random","puckMinSpeed","has","max","newX","newY","bounceY","bounceX","forceUpdate","slope","projectedIntersectionX","xAfterBounce","distToCenterPaddle","xPos","yPos","xSpeedBounceX","ySpeedBounceX","xVel","yVel","percentMoreToTravel","projectedIntersectionY","oldSpeed","scaleLine","Snowflakes","numSnowflakes","sizeRange","opacityRange","snowflakeTypes","animationDuration","possibleShakeAnimations","animationTimingFunctions","rotateDur","possibleRotations","snowflakes","Array","fill","maxAniDelay","map","value","index","aniNameString","floor","aniDurationString","join","aniDelayString","aniTimingFunctionString","rotateName","rotateDuration","snowflakeType","fontSize","opacity","animationName","webkitAnimationName","webkitAnimationDuration","animationDelay","webkitAnimationDelay","animationTimingFunction","webkitAnimationTimingFunction","style2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hyphenLeft","hyphenRight","i","ReactDOM","render","StrictMode","src","Photo_Me","alt","href","document","getElementById"],"mappings":"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","file":"static/js/main.c69930a3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom_components/Snowflakes/Snowflakes.css';\nimport App from './App';\nimport Snowflakes from \"./custom_components/Snowflakes/Snowflakes\";\nimport reportWebVitals from './diagnostics/reportWebVitals';\n\nimport Photo_Me from './img/troy.jpg';\n\nconst numHyphens = 80;\nlet hyphenLeft = \"\";\nlet hyphenRight = \"\";\nfor (let i = 0; i < numHyphens; i++) {\n    hyphenLeft += \" <--\";\n    hyphenRight += \"--> \";\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <div className={'background'}>\n            <Snowflakes numSnowflakes={40} opacityRange={[0.4, 0.8]} sizeRange={[1.5, 3.3]} />\n            <p className={'static-text main'}>\n                <span className={'title'}>Merry Christmas</span>\n            </p>\n            <p className={'static-text'}>\n                Merry Christmas Emily!<br />\n                You're the best girlfriend ever!<br />\n                I really really really love you a lottttt!!!!!!!!!!<br /><br />\n                You're amazing,<br />\n                cute,<br />\n                nice,<br />\n                caring,<br />\n                warm,<br />\n                hot,<br />\n                funny,<br />\n                wholesome,<br />\n                adorable,<br />\n                considerate,<br />\n                sexy,<br />\n                interesting,<br />\n                relaxing,<br />\n                pretty,<br />\n                fun,<br />\n                and you have beautiful eyes!<br /><br />\n                I'm really glad that I met you and talked to you and asked you out!<br />\n                Thank you for blowing my expectations away every time we talkkkkkk<br />\n                You're more amazing then I ever imagined :D<br /><br />\n                I wanna be with you and love you forever!<br />\n                I really really really really love you!<br />\n            </p>\n            <div className={'static-text no-wrap'}>\n                {`|${hyphenLeft} I Love You This Much! ${hyphenRight}|`}\n            </div>\n            <p className={'static-text'}>\n                Also, I got a haircut :P<br />\n                Choi returns >:D\n                <br />\n                <img className={'portrait'} src={Photo_Me} alt={\"\"} />\n                <br />\n                Lastly: <a href={'#app'}>Cursed Kaguya Pong!</a>\n            </p>\n            <div className={'vspace'} />\n            <p className={'static-text'}>\n                <span className={'title'}>Kaguya Pong</span>\n            </p>\n            <App />\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as React from 'react';\r\nimport './RectFill.css';\r\n\r\n// square/rect fills\r\n//  ratio is width/height\r\nclass RectFill extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.wrapperRef = React.createRef();\r\n        this.state = {\r\n            dimensions: null,\r\n            eventListenerAttached: false,\r\n        };\r\n    }\r\n    render(){\r\n        // ratio is width/height\r\n        const {padding = 0, ratio = 1} = this.props;\r\n        const {dimensions, eventListenerAttached} = this.state;\r\n\r\n        let inners = null;\r\n\r\n        if(eventListenerAttached && dimensions !== null){\r\n            const {width, height} = dimensions;\r\n\r\n            if(width && height){\r\n                const sideLength = Math.min(width/ratio, height);\r\n                const style = {\r\n                    position: 'absolute',\r\n                    width: `${sideLength*ratio - 2*padding}px`,\r\n                    height: `${sideLength - 2*padding}px`,\r\n                    left: `${(width-sideLength*ratio)/2 + padding}px`,\r\n                    top: `${(height-sideLength)/2 + padding}px`,\r\n                };\r\n\r\n                inners = (\r\n                    <div style={style} className={this.props.className}>\r\n                        {this.props.children}\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                console.log(`SquareFill error, found width/height to be: [${width}, ${height}]`);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div ref={this.wrapperRef} className={'rect-fill-js-wrapper-style'} >\r\n                {inners}\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", () => {\r\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\r\n        });\r\n        this.setState(() => ({eventListenerAttached: true}));\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.dimensions === null){\r\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        if(this.state.eventListenerAttached){\r\n            // this.wrapperRef.current.removeEventListener(\"resize\", () => {\r\n            //     console.log('resize');\r\n            //     this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}))\r\n            // });\r\n            window.removeEventListener(\"resize\", () => {\r\n                console.log('resize');\r\n                this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default RectFill;","import * as React from 'react';\nimport RectFill from \"./components/RectFill/RectFill\";\nimport './App.css';\n\n// states\n//  constants so don't have to shift the numbers around\nconst welcome = 0;\n//  shift\nconst transitionA = 1;\n//  zoom\nconst transitionB = 2;\nconst difficultySelect = 7;\nconst countdown = 3;\nconst playing = 4;\nconst gameEnded = 5;\nconst credits = 6;\n\n// game constants\nconst winScore = 7;\n//  1 game unit -> 'gameToPercent' percents\nconst gameToPercent = 0.05;\n// all below in game units\n//  the right eye starts slightly high in the beginning\nconst rightEyeStartOffset = -1.75/gameToPercent;\nconst leftEyeStartOffset = 0.85/gameToPercent;\n//  game bounds\nconst topBound = -35/gameToPercent;\nconst botBound = 40/gameToPercent;\n//  left: 23% on puck puts puck center on edge of paddle, TODO: when in use subtract puckRadius\nconst distToPaddlePlane = 23/gameToPercent;\n//  same as above but death (scoring) plane\nconst distToDeathPlane = 23.9/gameToPercent;\n//  paddle width - from center to edge is 'paddleWidth'/2\nconst paddleWidth = 27/gameToPercent;\n//  radius of puck\nconst puckRadius = 2.5/gameToPercent;\n\n// game speed constants\nconst ticksPS = 60;\n// horizontal\nconst puckStartSpeed = -14;\nconst puckMinSpeed = 14;\n// vertical\nconst paddleSpeed = 17;\nlet aiPaddleSpeed = 12;\nconst difficultyAISpeed = [6, 8, 12, 16];\n// controls the physics of ball bouncing off the paddle\nconst vertSpeedConservation = .4;\n// desmos: Kaguya Pong\n//  s = 'scaleLine'\n//  f1 = how much ySpeed the ball gets\n//  f2 = how much xSpeed the ball gets\n//   x-axis = distance from paddle center in percent\n//   y-axis = speed\n//  formula:\n//   ySpeed = oldYSpeed*vertSpeedConservation + f1\n//   xSpeed = (-oldXSpeed) + f2*horzSpeedMod         (min of minSpeed)\nconst scaleLine = 40;\n// we want x speed to be slower than y speed since more space\nconst horzSpeedMod = 1/2;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            state: welcome,\n            countdownVal: -1,\n            difficultySelected: 1,\n        };\n\n        // for handlers\n        this.keysDown = new Set();\n\n        // game variables\n        this.tickInterval = null;\n        this.paddle1Pos = null;\n        this.paddle2Pos = null;\n        this.xPuck = null;\n        this.yPuck = null;\n        this.xVelecityPuck = null;\n        this.yVelecityPuck = null;\n        this.scoreLeft = null;\n        this.scoreRight = null;\n    }\n\n    // event handlers\n    // handler functions\n    pressAnyToContinue() {\n        this.setState(() => ({state: transitionA}));\n        setTimeout(() => {\n            this.setState(() => ({state: transitionB}));\n            setTimeout(() => this.setState(() => ({state: difficultySelect})), 1200);\n        }, 1200);\n    }\n    playAgain() {\n        this.setState(() => ({state: difficultySelect}));\n    }\n    selectDifficulty(val) {\n        if(val === undefined || val < 0 || val > difficultyAISpeed.length) {\n            console.log(`SELECTDIFFICULTY ERROR`);\n        }\n        else {\n            aiPaddleSpeed = difficultyAISpeed[val];\n            this.setState(() => ({difficultySelected: val}));\n            setTimeout(() => this.setState(() => ({state: countdown, countdownVal: -1})), 50);\n        }\n    }\n    keyPressHandler(e) {\n        const {state, difficultySelected} = this.state;\n\n        // console.log(`keyPress: ${e.key}`);\n\n        // press any key to continue...\n        if(state === welcome) {\n            this.pressAnyToContinue();\n        }\n        // difficulty select\n        if(state === difficultySelect) {\n            if(e.key === 'w' || e.key === 'W' || e.key === 'ArrowUp') {\n                if(difficultySelected > 0) {\n                    this.setState((old) => ({difficultySelected: old.difficultySelected-1}));\n                }\n            }\n            if(e.key === 's' || e.key === 'S' || e.key === 'ArrowDown') {\n                if(difficultySelected < difficultyAISpeed.length-1) {\n                    this.setState((old) => ({difficultySelected: old.difficultySelected+1}));\n                }\n            }\n            if(e.key === 'Enter') {\n                this.selectDifficulty(difficultySelected);\n            }\n        }\n        // play again?\n        if(state === credits) {\n            this.playAgain();\n        }\n    }\n    clickHandler(e) {\n        const {state} = this.state;\n\n        console.log(`click: ${e}`);\n\n        // press any key to continue...\n        if(state === welcome){\n            this.pressAnyToContinue();\n        }\n        // play again?\n        if(state === credits){\n            this.playAgain();\n        }\n    }\n    keyDownHandler(e) {\n        this.keysDown.add(e.key);\n    }\n    keyUpHandler(e) {\n        this.keysDown.delete(e.key);\n    }\n\n    // render\n    render() {\n        const {state, countdownVal, difficultySelected} = this.state;\n\n        if(state === welcome) {\n            return (\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={25} ratio={1.77777777778} className={\"slow-transition\"}>\n                        <div className={\"bg-2 fill\"} />\n                        <div className={\"right-eye fill\"} />\n                        <div className={\"left-eye fill\"} />\n                        <div className={\"text\"}>\n                            PRESS START\n                        </div>\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === transitionA) {\n            return (\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"slow-transition\"}>\n                        <div className={\"bg-2 fill fill-transition\"} />\n                        <div className={\"right-eye fill fill-transition\"} />\n                        <div className={\"left-eye fill fill-transition\"} />\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === transitionB) {\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2 fill-transition\"} />\n                        <div className={\"right-eye fill fill2 fill-transition\"} />\n                        <div className={\"left-eye fill fill2 fill-transition\"} />\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === difficultySelect) {\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2 fill-transition\"} />\n                        <div className={\"right-eye fill fill2 fill-transition\"} />\n                        <div className={\"left-eye fill fill2 fill-transition\"} />\n                        <div className={\"text textGame\"}>\n                            ENEMY IQ:\n                            <br /><br />\n                            <span onClick={() => this.selectDifficulty(0)}\n                                  className={'diff-selector' + ((difficultySelected === 0) ? (' selected') : (''))}>\n                                CHIKA\n                            </span>\n                            <br /><br />\n                            <span onClick={() => this.selectDifficulty(1)}\n                                  className={'diff-selector' + ((difficultySelected === 1) ? (' selected') : (''))}>\n                                KAGUYA\n                            </span>\n                            <br /><br />\n                            <span onClick={() => this.selectDifficulty(2)}\n                                  className={'diff-selector' + ((difficultySelected === 2) ? (' selected') : (''))}>\n                                HAYASAKA\n                            </span>\n                            <br /><br />\n                            <span onClick={() => this.selectDifficulty(3)}\n                                  className={'diff-selector' + ((difficultySelected === 3) ? (' selected') : (''))}>\n                                ISHIGAMI\n                            </span>\n                        </div>\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === countdown) {\n            // Countdown\n            if(countdownVal === -1){\n                this.setState(() => ({countdownVal: 4}));\n\n                setTimeout(() => {\n                    this.setState(() => ({countdownVal: 3}));\n                    setTimeout(() => {\n                        this.setState(() => ({countdownVal: 2}));\n                        setTimeout(() => {\n                            this.setState(() => ({countdownVal: 1}));\n                            setTimeout(() => {\n                                this.setState(() => ({countdownVal: 0}));\n                                setTimeout(() => {\n                                    this.setState(() => ({state: playing}));\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }\n\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2\"} />\n                        {this.makeBorders()}\n                        <div className={\"right-eye fill fill2\"} />\n                        <div className={\"left-eye fill fill2\"} />\n                        <div className={\"puck fill fill2\"} />\n                        <div className={\"text textGame\"}>\n                            {((countdownVal === 4) ? (\"READY\") : (countdownVal))}\n                        </div>\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === playing) {\n            // start playing\n            if(this.tickInterval === null){\n                this.resetGameVars();\n                console.log(`game starting, ai speed: ${aiPaddleSpeed}`);\n                this.tickInterval = setInterval(() => this.tick(), 1000/ticksPS);\n            }\n\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2\"} />\n                        {this.makeBorders()}\n                        <div className={\"text textGame textScore\"}>\n                            {`${this.scoreLeft}`}<span />-<span />{`${this.scoreRight}`}\n                        </div>\n                        <div className={\"left-eye fill fill2\"} style={({\n                            top: `${(this.paddle1Pos-leftEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"right-eye fill fill2\"} style={({\n                            top: `${(this.paddle2Pos-rightEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"puck fill fill2\"} style={({\n                            left: `${this.xPuck*gameToPercent}%`,\n                            top: `${this.yPuck*gameToPercent}%`,\n                        })} />\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === gameEnded) {\n            if(this.tickInterval) {\n                clearInterval(this.tickInterval);\n                this.tickInterval = null;\n            }\n\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2\"} />\n                        {this.makeBorders()}\n                        <div className={\"text textGame textScore\"}>\n                            {`${this.scoreLeft}`}<span />-<span />{`${this.scoreRight}`}\n                        </div>\n                        <div className={\"left-eye fill fill2\"} style={({\n                            top: `${(this.paddle1Pos-leftEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"right-eye fill fill2\"} style={({\n                            top: `${(this.paddle2Pos-rightEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"puck fill fill2\"} style={({\n                            left: `${this.xPuck*gameToPercent}%`,\n                            top: `${this.yPuck*gameToPercent}%`,\n                        })} />\n                        <div className={\"text textGame\"}>\n                            {`P${((this.scoreLeft > this.scoreRight) ? (1) : (2))} WINS!`}\n                        </div>\n                    </RectFill>\n                </div>\n            );\n        }\n\n        else if(state === credits) {\n            return(\n                <div className={'app'} id={'app'} onKeyPress={(e) => this.keyPressHandler(e)}\n                     onKeyDown={(e) => this.keyDownHandler(e)} onKeyUp={(e) => this.keyUpHandler(e)}\n                     onClick={(e) => this.clickHandler(e)} tabIndex={-1}>\n                    <RectFill padding={10} ratio={1} className={\"hide-overflow\"}>\n                        <div className={\"bg-2 fill fill2\"} />\n                        {this.makeBorders()}\n                        <div className={\"text textGame textScore\"}>\n                            {`${this.scoreLeft}`}<span />-<span />{`${this.scoreRight}`}\n                        </div>\n                        <div className={\"left-eye fill fill2\"} style={({\n                            top: `${(this.paddle1Pos-leftEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"right-eye fill fill2\"} style={({\n                            top: `${(this.paddle2Pos-rightEyeStartOffset)*gameToPercent}%`,\n                        })} />\n                        <div className={\"puck fill fill2\"} style={({\n                            left: `${this.xPuck*gameToPercent}%`,\n                            top: `${this.yPuck*gameToPercent}%`,\n                        })} />\n                        <div className={\"text textGame\"}>\n                            {`P${((this.scoreLeft > this.scoreRight) ? (1) : (2))} WINS!`}\n                            <br /><br />\n                            PLAY AGAIN?\n                        </div>\n                    </RectFill>\n                </div>\n            );\n        }\n\n        // TODO: onwards\n\n        console.log(`UNKNOWN STATE IN APP: ${state}`);\n        return null;\n    }\n\n    // game functions\n    tick() {\n        // check gameover / reset paddle position\n        if(Math.abs(this.xPuck) >= distToDeathPlane) {\n            if(this.scoreLeft >= winScore || this.scoreRight >= winScore) {\n                clearInterval(this.tickInterval);\n                this.setState(() => ({state: gameEnded}));\n                setTimeout(() => this.setState(() => ({state: credits})), 2000);\n                return;\n            }\n\n            this.xVelecityPuck = ((this.xPuck > 0) ? (puckStartSpeed/3 * -1) : (puckStartSpeed/3));\n            this.yVelecityPuck = Math.random()*puckMinSpeed-puckMinSpeed/2;\n            this.xPuck = 0;\n            this.yPuck = 0;\n        }\n\n        // move paddles\n        if(this.keysDown.has('ArrowUp') || this.keysDown.has('w') || this.keysDown.has('W')) {\n            this.paddle1Pos = Math.max(this.paddle1Pos-paddleSpeed, topBound+paddleWidth/2);\n        }\n        if(this.keysDown.has('ArrowDown') || this.keysDown.has('s') || this.keysDown.has('S')) {\n            this.paddle1Pos = Math.min(this.paddle1Pos+paddleSpeed, botBound-paddleWidth/2);\n        }\n        //  ai\n        //  TODO: more complicated ai\n        if(this.paddle2Pos > this.yPuck+aiPaddleSpeed) {\n            this.paddle2Pos = Math.max(this.paddle2Pos-aiPaddleSpeed, topBound+paddleWidth/2);\n        }\n        else if(this.paddle2Pos < this.yPuck-aiPaddleSpeed) {\n            this.paddle2Pos = Math.min(this.paddle2Pos+aiPaddleSpeed, botBound-paddleWidth/2);\n        }\n\n        // move ball\n        //  bounce formula:\n        //   ySpeed = oldYSpeed*vertSpeedConservation + f1\n        //   xSpeed = (-oldXSpeed) + f2*horzSpeedMod         (min of minSpeed)\n        let newX = this.xPuck + this.xVelecityPuck;\n        let newY = this.yPuck + this.yVelecityPuck;\n        //  worst edge case: ball moving diagonally into corner\n        if((newY <= topBound || newY >= botBound) && Math.abs(newX) >= distToPaddlePlane-puckRadius){\n            // console.log(\"corner case\");\n            const percentXToGo = Math.abs((Math.abs(this.xPuck - distToPaddlePlane)+puckRadius)/this.xVelecityPuck);\n            const percentYToGo = ((newY <= topBound) ? (\n                Math.abs((Math.abs(this.yPuck-topBound)+puckRadius)/this.yVelecityPuck)\n            ) : (\n                Math.abs((Math.abs(this.yPuck-botBound)+puckRadius)/this.yVelecityPuck)\n            ));\n\n            if(percentXToGo > percentYToGo){\n                [newX, newY] = this.bounceY(newY);\n                [this.xPuck, this.yPuck] = this.bounceX(newX);\n            }\n            else {\n                [newX, newY] = this.bounceX(newX);\n                [this.xPuck, this.yPuck] = this.bounceY(newY);\n            }\n        }\n        else if(newY <= topBound || newY >= botBound) {\n            [this.xPuck, this.yPuck] = this.bounceY(newY);\n        }\n        else if (Math.abs(newX) >= distToPaddlePlane-puckRadius) {\n            [this.xPuck, this.yPuck] = this.bounceX(newX);\n        }\n        else {\n            [this.xPuck, this.yPuck] = [newX, newY];\n        }\n\n        // check scoring\n        if(Math.abs(this.xPuck) >= distToDeathPlane){\n            this.scoreLeft += (this.xPuck > 0);\n            this.scoreRight += (this.xPuck < 0);\n        }\n\n        this.forceUpdate();\n    }\n    // helpers ball movement\n    //  return [newX, newY]\n    bounceY(newY) {\n        const slope = this.yVelecityPuck/this.xVelecityPuck;\n        this.yVelecityPuck *= -1;\n\n        if(newY <= topBound) {\n            const projectedIntersectionX = (topBound-this.yPuck)/slope + this.xPuck;\n            const xAfterBounce = Math.abs(this.xVelecityPuck) - Math.abs(projectedIntersectionX-this.xPuck);\n\n            return [this.xPuck+this.xVelecityPuck, topBound+(-slope*xAfterBounce)];\n        }\n        else if(newY >= botBound) {\n            const projectedIntersectionX = (botBound-this.yPuck)/slope + this.xPuck;\n            const xAfterBounce = Math.abs(this.xVelecityPuck) - Math.abs(projectedIntersectionX-this.xPuck);\n\n            return [this.xPuck+this.xVelecityPuck, botBound-(-slope*xAfterBounce)];\n        }\n        else {\n            console.log('ERROR IN BOUNCEY');\n            return undefined;\n        }\n    }\n    //  bounce formula:\n    //   xSpeed = (-oldXSpeed) + (-scale(dist)+scale/4)*horzSpeedMod         (min of minSpeed)\n    //   ySpeed = oldYSpeed*vertSpeedConservation + (scale(dist))\n    bounceX(newX) {\n        // paddle 1\n        if(-newX >= distToPaddlePlane-puckRadius) {\n            // only bounce if paddle is there\n            const distToCenterPaddle = (this.yPuck - this.paddle1Pos)/paddleWidth;\n            if(Math.abs(distToCenterPaddle) > 0.5+puckRadius/paddleWidth){\n                return [newX, this.yPuck+this.yVelecityPuck];\n            }\n\n            // calculate new velocities\n            const [xVel, yVel] = [this.xSpeedBounceX(this.xVelecityPuck, distToCenterPaddle), this.ySpeedBounceX(this.yVelecityPuck, distToCenterPaddle)];\n\n            // calculate the ball's new position this tick\n            let xPos, yPos;\n            //  if its already inside the paddle simply change velocities and update position\n            if(-this.xPuck >= distToPaddlePlane-puckRadius) {\n                [xPos, yPos] = [this.xPuck+xVel, this.yPuck+yVel];\n            }\n            //  otherwise simulate how the bounce would work given infinite tick rate\n            else {\n                // model how much more the puck should have traveled after the bounce\n                const percentTurnTraveled = Math.abs((distToPaddlePlane - Math.abs(this.xPuck) - puckRadius)/this.xVelecityPuck);\n                const percentMoreToTravel = 1 - percentTurnTraveled;\n                // find the x/y the puck would have hit the paddle\n                const projectedIntersectionY = (this.yVelecityPuck/this.xVelecityPuck)*(-distToPaddlePlane-this.xPuck+puckRadius)+this.yPuck;\n\n                // model where the puck would have traveled to after the collision\n                [xPos, yPos] = [-distToPaddlePlane+percentMoreToTravel*xVel+puckRadius, projectedIntersectionY+percentMoreToTravel*yVel];\n            }\n\n            // if the new position is still in the paddle, eject it\n            if(-xPos >= distToPaddlePlane-puckRadius) {\n                [xPos, yPos] = [-distToPaddlePlane+1+puckRadius, (yVel/xVel)*Math.abs((-distToPaddlePlane+1+puckRadius)-xPos)+yPos];\n            }\n\n            // update\n            [this.xVelecityPuck, this.yVelecityPuck] = [xVel, yVel];\n            return [xPos, yPos];\n        }\n        // paddle 2\n        else if(newX >= distToPaddlePlane-puckRadius) {\n            // only bounce if paddle is there\n            const distToCenterPaddle = (this.yPuck - this.paddle2Pos)/paddleWidth;\n            if(Math.abs(distToCenterPaddle) > 0.5+puckRadius/paddleWidth){\n                return [newX, this.yPuck+this.yVelecityPuck];\n            }\n\n            // calculate new velocities\n            const [xVel, yVel] = [-this.xSpeedBounceX(this.xVelecityPuck, distToCenterPaddle), this.ySpeedBounceX(this.yVelecityPuck, distToCenterPaddle)];\n\n            // calculate the ball's new position this tick\n            let xPos, yPos;\n            //  if its already inside the paddle simply change velocities and update position\n            if(this.xPuck >= distToPaddlePlane-puckRadius) {\n                [xPos, yPos] = [this.xPuck+xVel, this.yPuck+yVel];\n            }\n            //  otherwise simulate how the bounce would work given infinite tick rate\n            else {\n                // model how much more the puck should have traveled after the bounce\n                const percentTurnTraveled = Math.abs((distToPaddlePlane - Math.abs(this.xPuck)-puckRadius)/this.xVelecityPuck);\n                const percentMoreToTravel = 1 - percentTurnTraveled;\n                // find the x/y the puck would have hit the paddle\n                const projectedIntersectionY = (this.yVelecityPuck/this.xVelecityPuck)*(distToPaddlePlane-this.xPuck-puckRadius)+this.yPuck;\n\n                // model where the puck would have traveled to after the collision\n                [xPos, yPos] = [distToPaddlePlane+percentMoreToTravel*xVel-puckRadius, projectedIntersectionY+percentMoreToTravel*yVel];\n            }\n\n            // if the new position is still in the paddle, eject it\n            if(xPos >= distToPaddlePlane-puckRadius) {\n                [xPos, yPos] = [distToPaddlePlane-1-puckRadius, (yVel/xVel)*Math.abs((distToPaddlePlane-1-puckRadius)-xPos)+yPos];\n            }\n\n            // update\n            [this.xVelecityPuck, this.yVelecityPuck] = [xVel, yVel];\n            return [xPos, yPos];\n        }\n        else {\n            console.log('ERROR IN BOUNCEX');\n            return undefined;\n        }\n    }\n    xSpeedBounceX(oldSpeed, distToCenterPaddle) {\n        return Math.max(Math.abs(oldSpeed) + (-scaleLine*Math.abs(distToCenterPaddle) + scaleLine/4)*horzSpeedMod, puckMinSpeed);\n    }\n    ySpeedBounceX(oldSpeed, distToCenterPaddle) {\n        return oldSpeed*vertSpeedConservation + (scaleLine*distToCenterPaddle);\n    }\n\n    // helper function\n    // makes the bounds\n    makeBorders() {\n        return(\n            <>\n                <div className={\"horz-bound fill fill2\"} style={({top: `${topBound*gameToPercent-puckRadius*gameToPercent}%`})} />\n                <div className={\"horz-bound fill fill2\"} style={({top: `${botBound*gameToPercent+puckRadius*gameToPercent}%`})} />\n                <div className={\"vert-bound fill fill2\"} style={({left: `${-distToDeathPlane*gameToPercent - puckRadius*gameToPercent}%`})} />\n                <div className={\"vert-bound fill fill2\"} style={({left: `${distToDeathPlane*gameToPercent + puckRadius*gameToPercent}%`})} />\n            </>\n        );\n    }\n    // resets default game vars\n    resetGameVars() {\n        this.paddle1Pos = leftEyeStartOffset;\n        this.paddle2Pos = rightEyeStartOffset;\n        this.xPuck = 0;\n        this.yPuck = 0;\n        this.xVelecityPuck = puckStartSpeed;\n        this.yVelecityPuck = 0;\n        this.scoreLeft = 0;\n        this.scoreRight = 0;\n    }\n}\n\nexport default App;\n","import * as React from 'react';\r\nimport './Snowflakes.css';\r\n\r\n// -webkit-animation-delay:2s,2s;animation-delay:2s,2s\r\n\r\nconst Snowflakes = ({\r\n        numSnowflakes=12,\r\n        sizeRange=[1,2],\r\n        opacityRange=[0.8, 0.9],\r\n        snowflakeTypes=['❆', '❅', '❄'],\r\n        animationDuration=[[12, 17], [3, 7]],\r\n        possibleShakeAnimations=10,\r\n        animationTimingFunctions=['ease', 'ease-in', 'ease-out', 'ease-in-out'],\r\n        rotateDur=[20, 35],\r\n        possibleRotations=['snowflakes-rotate', 'snowflakes-rotate-reverse'],\r\n    }) => {\r\n    let snowflakes = Array(numSnowflakes).fill(null);\r\n\r\n    // animation stuff\r\n    const maxAniDelay = Math.abs(animationDuration[0][0]+animationDuration[0][1])/2;\r\n\r\n    snowflakes = snowflakes.map((value, index) => {\r\n        // need same value for two css options\r\n        const aniNameString = `snowflakes-fall,snowflakes-shake${Math.floor(Math.random()*possibleShakeAnimations)}`;\r\n        const aniDurationString = animationDuration.map((value, index) => `${(Math.random()*Math.abs(value[1]-value[0])) + Math.min(value[0], value[1])}s`).join(', ');\r\n        const aniDelayString = `${Math.random()*maxAniDelay}s, ${Math.random()*maxAniDelay}s`;\r\n        const aniTimingFunctionString = `${animationTimingFunctions[Math.floor(Math.random()*animationTimingFunctions.length)]}, ease-in-out`;\r\n        // rotate\r\n        const rotateName = `${possibleRotations[Math.floor(Math.random()*possibleRotations.length)]}`;\r\n        const rotateDuration = `${(Math.random()*Math.abs(rotateDur[1]-rotateDur[0])) + Math.min(rotateDur[0], rotateDur[1])}s`;\r\n\r\n        // snowflake in this one\r\n        const snowflakeType = snowflakeTypes[Math.floor(Math.random()*snowflakeTypes.length)];\r\n\r\n        const style = {\r\n            fontSize: `${(Math.random()*Math.abs(sizeRange[1]-sizeRange[0])) + Math.min(sizeRange[0], sizeRange[1])}em`,\r\n            opacity: `${(Math.random()*Math.abs(opacityRange[1]-opacityRange[0])) + Math.min(opacityRange[0], opacityRange[1])}`,\r\n            left: `${Math.random()*100}%`,\r\n\r\n            animationName: aniNameString,\r\n            webkitAnimationName: aniNameString,\r\n\r\n            animationDuration: aniDurationString,\r\n            webkitAnimationDuration: aniDurationString,\r\n\r\n            animationDelay: aniDelayString,\r\n            webkitAnimationDelay: aniDelayString,\r\n\r\n            animationTimingFunction: aniTimingFunctionString,\r\n            webkitAnimationTimingFunction: aniTimingFunctionString,\r\n        };\r\n        // since transform overrides\r\n        const style2 = {\r\n            animationName: rotateName,\r\n            webkitAnimationName: rotateName,\r\n\r\n            animationDuration: rotateDuration,\r\n            webkitAnimationDuration: rotateDuration,\r\n        };\r\n\r\n        return (\r\n            <div key={`${snowflakeType} - Delay: ${aniDelayString}`} className={'Snowflakes-js-snowflake'} style={style}>\r\n                <div className={'Snowflakes-js-snowflake-rotate'} style={style2}>\r\n                    {snowflakeType}\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <>\r\n            {snowflakes}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Snowflakes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/troy.ebeae00b.jpg\";"],"sourceRoot":""}